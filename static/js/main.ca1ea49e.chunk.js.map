{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","Response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EApBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACd,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOdC,EAfE,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC3B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,EATF,SAACC,GAEV,OACI,qBAAKC,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAkBC,OAAO,SAAjE,SACKJ,EAAMK,YC4BJC,G,yDA9BX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAM,CAACC,UAAS,GAFzB,E,8DAKkBC,EAAMC,GAEpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAOxB,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAnBCQ,cCwDZC,G,yDAnDX,aAAc,IAAD,8BACT,gBAeJC,eAAe,SAACC,GAEZ,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAhB1C,EAAKX,MAAM,CACPlB,OAAO,GACPK,YAAY,IAJP,E,gEAUZ,IAAD,OACIyB,MAAM,8CACLC,MAAK,SAAAC,GAAW,OAAOA,EAASC,UAChCF,MAAK,SAAAG,GAAQ,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAUxC,IAAD,OACUC,EAAeb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAC1C,OAAOA,EAAM5C,KAAK6C,oBAAoBC,SAAS,EAAKrB,MAAMb,YAAYiC,wBAE1E,OAA8B,IAA3BhB,KAAKJ,MAAMlB,OAAOwC,OACV,yCAGH,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,e,GAtC5BX,cCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.ca1ea49e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name ,email, id}) => {\r\n    return(\r\n        <div className='tc grow bg-light-green dib br4 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist =({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i)=>{\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email} \r\n                    />\r\n                );\r\n                })\r\n            }\r\n        </div>\r\n    );        \r\n                       \r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox =({searchfield,searchChange})=>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll=(props)=>\r\n{\r\n    return (\r\n        <div style={{overflowY: 'scroll',border:'1px solid black',height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import { render } from '@testing-library/react'\r\nimport React,{Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={hasError:false}\r\n    }\r\n\r\n    componentDidCatch(error,info)\r\n    {\r\n        this.setState({hasError:true})\r\n\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        if (this.state.hasError){\r\n            return <h1>Oooops .That is not good</h1>\r\n        }\r\n        return this.props.children\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default ErrorBoundry","import React,{Component} from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll.js'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\nclass App extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=>{return Response.json();})\r\n        .then(users=>{this.setState({robots: users})})\r\n    }\r\n    \r\n    onSearchChange=(event)=>{\r\n\r\n        this.setState({ searchfield: event.target.value})\r\n        \r\n    }\r\n\r\n    render()\r\n    {\r\n        const filteredRobots=this.state.robots.filter(robot=>{\r\n            return robot.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase())\r\n        })\r\n        if(this.state.robots.length===0){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n            return(\r\n                <div className='tc'>\r\n                    <h1 className='f2'>Robo Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <Cardlist robots={filteredRobots}/>\r\n                            \r\n                        </ErrorBoundry>\r\n                        \r\n                    </Scroll>\r\n                   \r\n                </div>\r\n            );\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';   //default export so no{}\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n"],"sourceRoot":""}